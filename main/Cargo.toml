[package]
name = "realearn"
version = "2.14.0-pre.8"
authors = ["Benjamin Klum <benjamin.klum@helgoboss.org>"]
edition = "2021"
build = "build.rs"
license = "GPL-3.0"

[features]
default = []

# Regenerate bindings (for dialog resource IDs and EEL functions)
generate = []

[dependencies]
reaper-rx = { git = "https://github.com/helgoboss/reaper-rs.git", branch = "master" }
reaper-high = { git = "https://github.com/helgoboss/reaper-rs.git", branch = "master", features = ["serde"] }
reaper-medium = { git = "https://github.com/helgoboss/reaper-rs.git", branch = "master", features = ["serde"] }
reaper-low = { git = "https://github.com/helgoboss/reaper-rs.git", branch = "master" }
swell-ui = { path = "../swell-ui" }
rx-util = { path = "../rx-util" }
playtime-clip-engine = { path = "../playtime-clip-engine" }
realearn-api = { path = "../api" }
playtime-api = { path = "../playtime-api" }
realearn-csi = { path = "../csi" }
helgoboss-midi = { version = "0.4", features = ["serde", "serde_repr"] }
# In future (when helgoboss-learn has matured), this will become a crates.io dependency
helgoboss-learn = { path = "lib/helgoboss-learn", features = ["serde", "serde_repr", "serde_with", "reaper-low"] }
# For being able to (de)serialize using FromStr and Display
serde_with = "2.0.1"
c_str_macro = "1.0.2"
vst = "0.3.0"
rxrust = { git = "https://github.com/rxRust/rxRust", rev = "349e50b3197e05926e2378ef8fc45cb67ad43b83" }
serde = { version = "1.0", features = ["derive", "rc"] }
serde_json = "1.0"
serde_repr = "0.1.5"
validator = "0.10.0"
validator_derive = "0.10"
derive_more = "0.99.5"
lazycell = "1.2"
enum-iterator = "0.6.0"
num_enum = "0.5.0"
crossbeam-channel = "0.5"
scopeguard = "1.1.0"
uuid = { version = "0.8.1", features = ["v4", "serde"] }
# Old logging
slog = "2.5.2"
slog-async = "2.5.2"
# New logging (for clip matrix)
tracing = "0.1.29"
tracing-subscriber = { version = "0.3.7", features = ["env-filter"] }
# For interacting with the OS clipboard
arboard = "2.0.0"
once_cell = "1.4.0"
# For being able to exclude fields from the derived Debug implementation
derivative = "2.2.0"
chrono = "0.4.11"
smallvec = "1.7.0"
backtrace = "0.3"
regex = "1"
enum-map = "0.6.3"
# For generating controller file names from controller names
slug = "0.1.4"
# For generating random session IDs
nanoid = "0.3.0"
# For ReaLearn's servers
futures = { version = "0.3", default-features = false }
tokio = { version = "1", features = ["rt", "sync", "macros"] }
tokio-stream = { version = "0.1.8", features = ["sync"] }
tower = "0.4"
# For ReaLearn's http server (used for projection)
axum = { version = "0.3", features = ["ws", "headers"] }
axum-server = { version = "0.3", features = ["tls-rustls"] }
tower-http = { version = "0.1", features = ["cors"] }
# For ReaLearn's gRPC server
tonic = "0.5"
prost = "0.8"
# For generating projection QR code
qrcode = { version = "0.11" }
# For rendering projection QR code to PNG
image = "0.22"
# For generating self-signed certificate for projection web server
rcgen = "0.8.5"
# For showing different ways of connecting to this computer (projection feature)
dns-lookup = "1.0.4"
hostname = "^0.3"
# For rendering projection setup HTML page template
askama = "0.8"
# For persisting app configuration
serde_ini = "0.2.0"
# For opening projection setup page and companion app in local browser
webbrowser = "0.5.5"
# For writing generated projection setup page to disk
tempfile = "3.1.0"
# For adding firewall rules
runas = "0.2.1"
# For building URls, e.g. companion web app URL
url = "2.1.1"
# For grouping mappings by virtual control elements and grouping outgoing OSC messages by device
itertools = "0.10.1"
# For being able to configure logging via environment variable RUST_LOG
env_logger = "0.8.2"
# We want to forward slog logging to standard logging
slog-stdlog = "4.1.0"
# To be able to yield to main thread in async functions
futures-timer = "3.0.2"
# To open user guide in local PDF app
open = "1"
# In projection server, we must be able to handle controller IDs with special characters
percent-encoding = "2.1.0"
# For comparing ReaLearn versions in order to determine if preset migration is necessary
semver = { version = "0.9.0", features = ["serde"] }
# Maybe better asynchronous channel than in futures or tokio (basically the async version of crossbeam)
async-channel = "1.5.1"
# For displaying snapshot sizes
bytesize = "1.0.1"
# For OSC
rosc = "0.5.1"
# For letting the user edit advanced mapping settings
edit = { git = "https://github.com/helgoboss/edit", branch = "realearn" }
# For parsing/formatting advanced mapping settings
serde_yaml = "0.8.17"
# For parsing hexadecimal data notation to byte vector (for system-exclusive lifecycle MIDI messages)
hex = "0.4.2"
# For evaluation of <Dynamic> formulas
fasteval = { version = "0.2.4", default-features = false }
# For wildcard support when using "By name" selector
wildmatch = "2.1.0"
# For creating HashSet literals for projection feedback and in unit tests
maplit = "1.0.2"
# For easier support of named virtual control elements
ascii = "1.0"
# For using bit flags in the reaper-rs API.
enumflags2 = "0.7.4"
# For detecting undesired (de)allocation in real-time threads.
assert_no_alloc = { git = "https://github.com/Windfisch/rust-assert-no-alloc.git", branch = "master" }
# For making the patch in the root Cargo.toml work also after running `cargo update`.
webpki = "= 0.21.3"
# For making the patch in the root Cargo.toml work also after running `cargo update`.
hyper = "= 0.14.16"
# For being able to cleanly implement targets in separate files without needing to resort to dynamic dispatch.
enum_dispatch = "0.3.6"
# For processing mappings in user-defined order
indexmap = { git = "https://github.com/helgoboss/indexmap", branch = "feature/clion-workaround", features = ["std"] }
# For comparing floating point numbers in tests
approx = "0.3.2"
# For the API (ReaLearn Script) and MIDI scripts
mlua = { version = "0.6.6", features = ["vendored", "lua54", "serialize", "send"] }
# For checking if an FX has loaded a specific chunk and duplicate detection of non-primitive feedback messages
twox-hash = "1.6.1"
# For convenient converting prop key to prop enum variant
strum = "0.23"
strum_macros = "0.23"
metrics = "0.18.0"
metrics-exporter-prometheus = { version = "0.8.0", default-features = false }
# For parsing OSC argument value ranges
nom = "7.0.0"
# For obtaining dialog constants from dialog crate
realearn-dialogs = { path = "../dialogs" }
# For being able to return iterators of different types
either = "1.8.0"
# For reading preset directories recursively
walkdir = "2"
# For the mouse target (to simulate mouse)
enigo = "0.0.14"
# For the mouse target (to query mouse state)
device_query = "1.1.1"
# For egui graphics
egui-baseview = { git = "https://github.com/helgoboss/egui-baseview.git", branch = "feature/open-links-in-browser" }
baseview = { git = "https://github.com/helgoboss/baseview.git", branch = "try-borrow-mut" }
egui = "0.19.0"
# For speech source
tts = { git = "https://github.com/helgoboss/tts-rs", branch = "helgoboss-fixes" }

[target.'cfg(windows)'.dependencies]
# For detecting the Windows version (to determine whether special charactes can be displayed)
sys-info = "0.7"
# For converting virtual umlaut/special keys into character codes (keyboard source)
winapi = { version = "0.3", features = ["winuser"] }


[build-dependencies]
# For making Git commit hash available to code
built = { version = "0.5.1", features = ["git2", "chrono"] }
# For generating bindings (for dialog resource IDs and EEL functions)
bindgen = "0.60.1"
# For compiling EEL and SWELL dialog resources
# We use a special version because of "link_lib_modifiers", which allows us to add "+whole-archive"
# in a convenient way. TODO-low-wait https://github.com/rust-lang/cc-rs/pull/671
cc = { git = "https://github.com/petrochenkov/cc-rs.git", rev = "4d52bd211aeb2b4ddccd1b9c0a0841e03aaaef7c" }
# For embedding dialog resource files on Windows
embed-resource = "1.3"
# For RC dialog file generation
realearn-dialogs = { path = "../dialogs" }

[lib]
name = "realearn"
crate-type = ["cdylib"]
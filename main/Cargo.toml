[package]
name = "realearn"
version = "2.15.0-pre.7"
authors = ["Benjamin Klum <benjamin.klum@helgoboss.org>"]
edition = "2021"
build = "build.rs"
license = "GPL-3.0"
rust-version = "1.68.2"

[features]
default = []

# Regenerate bindings (for dialog resource IDs and EEL functions)
generate = []

[dependencies]
# Own
base.workspace = true
reaper-rx.workspace = true
reaper-high.workspace = true
reaper-medium.workspace = true
reaper-low.workspace = true
swell-ui.workspace = true
rx-util.workspace = true
playtime-clip-engine.workspace = true
pot.workspace = true
realearn-api.workspace = true
playtime-api.workspace = true
realearn-csi.workspace = true
# In future (when helgoboss-learn has matured), this will become a crates.io dependency
helgoboss-learn.workspace = true
helgoboss-midi.workspace = true

# 3rd-party
# For being able to (de)serialize using FromStr and Display
serde_with = "2.0.1"
c_str_macro = "1.0.2"
vst = "0.3.0"
rxrust.workspace = true
serde.workspace = true
serde_json.workspace = true
serde_repr = "0.1.5"
validator = "0.10.0"
validator_derive = "0.10"
derive_more.workspace = true
lazycell = "1.2"
enum-iterator.workspace = true
num_enum.workspace = true
crossbeam-channel.workspace = true
scopeguard.workspace = true
uuid = { version = "0.8.1", features = ["v4", "serde"] }
# Old logging
slog = "2.5.2"
slog-async = "2.5.2"
# New logging (for clip matrix)
tracing.workspace = true
tracing-subscriber = { version = "0.3.7", features = ["env-filter"] }
# For interacting with the OS clipboard
arboard = "2.0.0"
once_cell.workspace = true
# For being able to exclude fields from the derived Debug implementation
derivative.workspace = true
chrono.workspace = true
smallvec = "1.7.0"
backtrace = "0.3"
regex.workspace = true
enum-map.workspace = true
# For generating controller file names from controller names
slug.workspace = true
# For generating random session IDs
nanoid.workspace = true
# For ReaLearn's servers
futures.workspace = true
tokio.workspace = true
tokio-stream = { version = "0.1.8", features = ["sync"] }
tower = "0.4"
# For ReaLearn's http server (used for projection)
axum = { version = "0.3", features = ["ws", "headers"] }
axum-server = { version = "0.3", features = ["tls-rustls"] }
tower-http = { version = "0.3", features = ["cors"] }
# For ReaLearn's gRPC server
tonic.workspace = true
prost.workspace = true
# For generating projection QR code
qrcode = { version = "0.11" }
# For rendering projection QR code to PNG
image = "0.22"
# For generating self-signed certificate for projection web server
rcgen = "0.8.5"
# For showing different ways of connecting to this computer (projection feature)
dns-lookup = "1.0.4"
hostname = "^0.3"
# For rendering projection setup HTML page template
askama = "0.8"
# For persisting app configuration
serde_ini = "0.2.0"
# For opening projection setup page and companion app in local browser
webbrowser = "0.5.5"
# For writing generated projection setup page to disk
tempfile.workspace = true
# For adding firewall rules
runas = "0.2.1"
# For building URls, e.g. companion web app URL
url = "2.1.1"
# For grouping mappings by virtual control elements and grouping outgoing OSC messages by device
itertools.workspace = true
# For being able to configure logging via environment variable RUST_LOG
env_logger = "0.8.2"
# We want to forward slog logging to standard logging
slog-stdlog = "4.1.0"
# To open user guide in local PDF app
open = "1"
# In projection server, we must be able to handle controller IDs with special characters
percent-encoding = "2.1.0"
# For comparing ReaLearn versions in order to determine if preset migration is necessary
semver.workspace = true
# Maybe better asynchronous channel than in futures or tokio (basically the async version of crossbeam)
async-channel = "1.5.1"
# For displaying snapshot sizes
bytesize = "1.0.1"
# For OSC
rosc = "0.5.1"
# For letting the user edit advanced mapping settings
edit = { git = "https://github.com/helgoboss/edit", branch = "realearn" }
# For parsing/formatting advanced mapping settings
serde_yaml = "0.8.17"
# For parsing hexadecimal data notation to byte vector (for system-exclusive lifecycle MIDI messages)
hex = "0.4.2"
# For evaluation of <Dynamic> formulas
fasteval = { version = "0.2.4", default-features = false }
# For wildcard support when using "By name" selector
wildmatch.workspace = true
# For creating HashSet literals for projection feedback and in unit tests
maplit = "1.0.2"
# For easier support of named virtual control elements
ascii.workspace = true
# For using bit flags in the reaper-rs API.
enumflags2.workspace = true
# For detecting undesired (de)allocation in real-time threads.
assert_no_alloc.workspace = true
# For making the patch in the root Cargo.toml work also after running `cargo update`.
webpki = "= 0.21.3"
# For being able to cleanly implement targets in separate files without needing to resort to dynamic dispatch.
enum_dispatch = "0.3.6"
# For processing mappings in user-defined order
indexmap = { workspace = true }
# For comparing floating point numbers in tests
approx = "0.3.2"
# For the API (ReaLearn Script) and MIDI scripts
mlua.workspace = true
# For checking if an FX has loaded a specific chunk and duplicate detection of non-primitive feedback messages
xxhash-rust.workspace = true
# For convenient converting prop key to prop enum variant
strum.workspace = true
metrics.workspace = true
metrics-exporter-prometheus = { version = "0.8.0", default-features = false }
# For parsing OSC argument value ranges
nom.workspace = true
# For obtaining dialog constants from dialog crate
realearn-dialogs = { path = "../dialogs" }
# For being able to return iterators of different types
either.workspace = true
# For reading preset directories recursively
walkdir.workspace = true
# For egui graphics
egui-baseview = { git = "https://github.com/helgoboss/egui-baseview.git", branch = "realearn" }
baseview = { git = "https://github.com/helgoboss/baseview.git", branch = "realearn" }
egui = "0.21.0"
egui_extras = "0.21.0"
egui-toast = "0.6.0"
# For Pot target
lru = "0.10.0"
# For Pot target
pulldown-cmark = "0.9.2"
# For interfacing with egui
raw-window-handle.workspace = true
rfd = "0.11.3"
dirs = "5.0.1"

[target.'cfg(any(target_os = "windows", target_os = "macos"))'.dependencies]
# For speech source
tts = { git = "https://github.com/helgoboss/tts-rs", branch = "helgoboss-fixes" }

[target.'cfg(any(all(target_os = "windows", target_arch = "x86_64"), target_os = "macos"))'.dependencies]
opener = { version = "0.6.1", features = ["reveal"] }

[target.'cfg(windows)'.dependencies]
# For detecting the Windows version (to determine whether special charactes can be displayed)
sys-info = "0.7"
# For converting virtual umlaut/special keys into character codes (keyboard source)
winapi.workspace = true


[build-dependencies]
# For making Git commit hash available to code
built = { version = "0.5.1", features = ["git2", "chrono"] }
# For generating bindings (for dialog resource IDs and EEL functions)
bindgen.workspace = true
# For compiling EEL and SWELL dialog resources
# We use a special version because of "link_lib_modifiers", which allows us to add "+whole-archive"
# in a convenient way. TODO-low-wait https://github.com/rust-lang/cc-rs/pull/671
cc = { git = "https://github.com/petrochenkov/cc-rs.git", rev = "4d52bd211aeb2b4ddccd1b9c0a0841e03aaaef7c" }
# For embedding dialog resource files on Windows
embed-resource = "1.3"
# For RC dialog file generation
realearn-dialogs = { path = "../dialogs" }

[lib]
name = "realearn"
crate-type = ["cdylib"]

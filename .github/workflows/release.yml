on:
  create:
    ref_type: tag
    ref: 'v*'

name: Create release

jobs:

  build-release-artifacts:
    name: Build artifact
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - artifact: windows-x86_64
            os: windows-2022
            rust-version: 1.84.0
            lib-file-name: helgobox.dll
            extension-file-name: reaper_helgobox.dll
            target: x86_64-pc-windows-msvc
            profile: release
            features: "playtime,egui,licensing"
            macosx-deployment-target: ""
          - artifact: windows-i686
            os: windows-2022
            lib-file-name: helgobox.dll
            extension-file-name: reaper_helgobox.dll
            target: i686-pc-windows-msvc
            profile: release-llvm-out-of-memory-fix
            features: "egui"
            macosx-deployment-target: ""
          - artifact: macos-x86_64
            os: macos-latest
            lib-file-name: libhelgobox.dylib
            extension-file-name: libreaper_helgobox.dylib
            target: x86_64-apple-darwin
            profile: release-strip
            features: "playtime,egui,licensing"
            # The minimum version that I tested with is 10.13.
            # Writing 10.7 builds, but it won't run, for example, on 10.14 (weird)!
            # https://github.com/helgoboss/helgobox/issues/1384
            macosx-deployment-target: "10.9"
          - artifact: macos-aarch64
            os: macos-latest
            lib-file-name: libhelgobox.dylib
            extension-file-name: libreaper_helgobox.dylib
            target: aarch64-apple-darwin
            profile: release-strip
            features: "playtime,egui,licensing"
            # First aarch64 macOS version
            macosx-deployment-target: "11.0"
          - artifact: linux-x86_64
            os: ubuntu-22.04
            lib-file-name: libhelgobox.so
            extension-file-name: libreaper_helgobox.so
            target: x86_64-unknown-linux-gnu
            profile: release-strip
            features: "playtime,licensing"
            macosx-deployment-target: ""
          - artifact: linux-aarch64
            os: ubuntu-22.04-arm
            lib-file-name: libhelgobox.so
            extension-file-name: libreaper_helgobox.so
            target: aarch64-unknown-linux-gnu
            profile: release-strip
            features: "playtime,licensing"
            macosx-deployment-target: ""
    env:
      MACOSX_DEPLOYMENT_TARGET: ${{ matrix.macosx-deployment-target }}
    steps:
      # Prepare (all)
      - name: Checkout
        uses: actions/checkout@v4
      - uses: ./.github/actions/post-checkout
        with:
          playtime-engine-deploy-key: ${{ secrets.PRIVATE_PLAYTIME_CLIP_ENGINE_DEPLOY_KEY }}
          license-processor-deploy-key: ${{ secrets.PRIVATE_HELGOBOSS_LICENSE_PROCESSOR_DEPLOY_KEY }}

      - name: Install Rust
        uses: dtolnay/rust-toolchain@1.84.0
        with:
          target: ${{ matrix.target }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2

      # Install OS dependencies (Linux/macOS only)
      - name: Set up dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install nasm php libudev-dev libxdo-dev libx11-dev  libxcursor-dev libxcb-dri2-0-dev libxcb-icccm4-dev libx11-xcb-dev mesa-common-dev libgl1-mesa-dev libglu1-mesa-dev libspeechd-dev libgtk-3-dev
        shell: sh
      - name: Set up dependencies
        run: brew install php
        if: runner.os == 'macOS'
        shell: sh

      # Build (all)
      - name: Build release
        shell: sh
        env:
          PLAYTIME_AUTHENTICITY_SIGNING_KEY: "${{ secrets.PLAYTIME_AUTHENTICITY_SIGNING_KEY }}"
          PLAYTIME_LICENSE_VERIFYING_KEY: "${{ secrets.PLAYTIME_LICENSE_VERIFYING_KEY }}"
          PLAYTIME_PRESET_VERIFYING_KEY: "${{ secrets.PLAYTIME_PRESET_VERIFYING_KEY }}"
          AWS_LC_SYS_CMAKE_BUILDER: "1"
        run: cargo build --features "${{ matrix.features }}" --profile ${{ matrix.profile }} --target ${{ matrix.target }}

      # Upload to artifact
      - name: Upload plug-in and extension to artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact }}
          path: |
            target/${{ matrix.target }}/${{ matrix.profile }}/${{ matrix.lib-file-name }}
            target/${{ matrix.target }}/${{ matrix.profile }}/${{ matrix.extension-file-name }}
            target/${{ matrix.target }}/${{ matrix.profile }}/helgobox.pdb
            target/${{ matrix.target }}/${{ matrix.profile }}/deps/libhelgobox.dylib.dSYM/
            target/${{ matrix.target }}/${{ matrix.profile }}/libhelgobox-debug.so
      # Windows x64: Upload PDB to Sentry
      - name: Upload PDB
        if: startsWith(matrix.artifact, 'windows-x86_64')
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        shell: powershell
        run: |
          # Install Sentry CLI
          npm install -g @sentry/cli

          # Upload
          sentry-cli debug-files upload --auth-token $env:SENTRY_AUTH_TOKEN -o $env:SENTRY_ORG -p $env:SENTRY_PROJECT "target/${{ matrix.target }}/${{ matrix.profile }}/helgobox.pdb"

#  create-release:
#    name: Publish release
#    needs: build-release-artifacts
#    runs-on: ubuntu-22.04
#    steps:
#      - name: Get tag name
#        id: get_tag_name
#        run: echo ::set-output name=TAG_NAME::${GITHUB_REF/refs\/tags\//}
#      - name: Create release
#        id: create_release
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
#        with:
#          tag_name: ${{ steps.get_tag_name.outputs.TAG_NAME }}
#          release_name: ${{ steps.get_tag_name.outputs.TAG_NAME }}
#          draft: true
#          prerelease: ${{ contains(github.ref, 'pre') }}
#      - name: Download artifacts from build job
#        uses: actions/download-artifact@v4
#      # Upload Windows x86_64 artifacts
#      - name: Upload windows-x86_64 release artifact 1
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ./windows-x86_64/helgobox.dll
#          asset_name: helgobox-windows-x86_64.dll
#          asset_content_type: application/octet-stream
#      - name: Upload windows-x86_64 release artifact 2
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ./windows-x86_64/reaper_helgobox.dll
#          asset_name: reaper_helgobox-windows-x86_64.dll
#          asset_content_type: application/octet-stream
#      # Upload Windows i686 artifacts
#      - name: Upload windows-i686 release artifact 1
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ./windows-i686/helgobox.dll
#          asset_name: helgobox-windows-i686.dll
#          asset_content_type: application/octet-stream
#      - name: Upload windows-i686 release artifact 2
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ./windows-i686/reaper_helgobox.dll
#          asset_name: reaper_helgobox-windows-i686.dll
#          asset_content_type: application/octet-stream
#      # Upload macOS x86_64 artifacts
#      - name: Upload macos-x86_64 release artifact 1
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ./macos-x86_64/libhelgobox.dylib
#          asset_name: helgobox-macos-x86_64.vst.dylib
#          asset_content_type: application/octet-stream
#      - name: Upload macos-x86_64 release artifact 2
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ./macos-x86_64/libreaper_helgobox.dylib
#          asset_name: reaper_helgobox-macos-x86_64.dylib
#          asset_content_type: application/octet-stream
#      # Upload macOS aarch64 artifacts
#      - name: Upload macos-aarch64 release artifact 1
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ./macos-aarch64/libhelgobox.dylib
#          asset_name: helgobox-macos-aarch64.vst.dylib
#          asset_content_type: application/octet-stream
#      - name: Upload macos-aarch64 release artifact 2
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ./macos-aarch64/libreaper_helgobox.dylib
#          asset_name: reaper_helgobox-macos-aarch64.dylib
#          asset_content_type: application/octet-stream
#      # Upload Linux x86_64 artifacts
#      - name: Upload linux-x86_64 release artifact 1
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ./linux-x86_64/libhelgobox.so
#          asset_name: helgobox-linux-x86_64.so
#          asset_content_type: application/octet-stream
#      - name: Upload linux-x86_64 release artifact 2
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ./linux-x86_64/libreaper_helgobox.so
#          asset_name: reaper_helgobox-linux-x86_64.so
#          asset_content_type: application/octet-stream
#      # Upload Linux aarch64 artifacts
#      - name: Upload linux-aarch64 release artifact 1
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ./linux-aarch64/libhelgobox.so
#          asset_name: helgobox-linux-aarch64.so
#          asset_content_type: application/octet-stream
#      - name: Upload linux-aarch64 release artifact 2
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ./linux-aarch64/libreaper_helgobox.so
#          asset_name: reaper_helgobox-linux-aarch64.so
#          asset_content_type: application/octet-stream
